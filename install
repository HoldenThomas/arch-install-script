#!/bin/sh

baseArch() {
	hostname=$(dialog --stdout --inputbox "Enter hostname" 0 0) || exit 1
	clear
	: ${hostname:?"hostname cannot be empty"} || exit 1

	user=$(dialog --stdout --inputbox "Enter admin username" 0 0) || exit 1
	clear
	: ${user:?"user cannot be empty"}

	password=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
	clear
	: ${password:?"password cannot be empty"}
	password2=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
	clear
	[ "$password" != "$password2" ] && echo "Passwords did not match" && exit 1

	devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac) || exit 1
	device=$(dialog --stdout --menu "Select installation disk" 0 0 0 ${devicelist})
	clear

	dialog --stdout --yesno "Grub removable installation" 0 0
	grubRemovable=$?
	clear

	dialog --stdout --yesno "Is this a virtualbox installation" 0 0
	virtualBox=$?
	clear

	dialog --stdout --yesno "Install nvidia drivers" 0 0
	nvidia=$?
	clear

	cpu=$(dialog --stdout --menu "Choose CPU" 0 0 0 1 "Intel" 2 "AMD") || exit 1
	clear


	timedatectl set-ntp true

	echo -e "g\n  n\n\n\n+260M\nt\n1\n  n\n\n\n+2G\nt\n\n19\n  n\n\n\n\n  w\n" | fdisk $device
	partBoot="${device}1"
	partSwap="${device}2"
	partLinux="${device}3"
	mkfs.fat -F 32 $partBoot
	mkfs.ext4 $partLinux
	mkswap $partSwap
	swapon $partSwap
	mount $partLinux /mnt
	mkdir /mnt/boot
	mount $partBoot /mnt/boot

	pacstrap /mnt base base-devel linux linux-firmware man-db man-pages texinfo networkmanager neovim git grub efibootmgr
	[ $nvidia -eq 0 ] && pacstrap /mnt nvidia nvidia-settings
	[ $cpu -eq 1 ] && pacstrap /mnt intel-ucode || pacstrap /mnt amd-ucode

	genfstab -U /mnt >> /mnt/etc/fstab
	arch-chroot /mnt ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
	arch-chroot /mnt hwclock --systohc
	sed -i "177 s/^##*//" /mnt/etc/locale.gen
	arch-chroot /mnt locale-gen
	echo LANG=en_US.UTF-8 >> /mnt/etc/locale.conf
	echo $hostname >> /mnt/etc/hostname
	echo -e "127.0.0.1\tlocalhost\n::1\t\tlocalhost\n127.0.1.1\t${hostname}.localdomain\t${hostname}" >> /mnt/etc/hosts
	arch-chroot /mnt systemctl enable NetworkManager

	[ $grubRemovable -eq 0 ] && arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=boot --removable || arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=boot --bootloader-id=GRUB
	arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

	[ $virtualBox -eq 0 ] && pacstrap /mnt virtualbox-guest-utils && arch-chroot /mnt systemctl enable vboxservice

	arch-chroot /mnt useradd -m -G wheel,audio,disk,input,kvm,optical,scanner,storage,video $user
	sed -i "82 s/^##*//;s|# %wheel ALL=(ALL) NOPASSWD: ALL|%wheel ALL=(ALL) NOPASSWD: /usr/bin/mount,/usr/bin/umount,/usr/bin/pacman,/usr/bin/systemctl,/usr/bin/make,/usr/bin/nvim|" /mnt/etc/sudoers
	echo -e "${password}\n${password}" | arch-chroot /mnt passwd
	echo -e "${password}\n${password}" | arch-chroot /mnt passwd $user

	sed -i "33 s/^##*//;93,94 s/^##*//;37i ILoveCandy" /mnt/etc/pacman.conf
	arch-chroot /mnt pacman -Syu
	sed -i "s/GRUB_TIMEOUT=5/GRUB_TIMEOUT=1/" /mnt/etc/default/grub
	arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

	cp install /mnt/home/"$user"

	dialog --stdout --yesno "Reboot now" 0 0
	reboot=$?
	[ $reboot -eq 0 ] && reboot || exit 1
}

rice() {
	dialog --stdout --yesno "If dualbooting windows, fix time" 0 0
	timeFix=$?
	clear

	[ $timeFix -eq 0 ] && sudo timedatectl set-local-rtc true --adjust-system-clock
	clear

	git clone https://aur.archlinux.org/yay.git; cd yay; makepkg --noconfirm -si; cd; rm -rf yay

	mkdir .dotfiles
	git clone --bare git://git.holdenthomas.xyz/dotfiles ~/.dotfiles
	git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME checkout
	git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME config status.showUntrackedFiles no

	options=()
	options+=("xorg-server" "graphical server" on)
	options+=("xorg-xinit" "starting graphical server" on)
	options+=("xwallpaper" "setting wallpaper" on)
	options+=("xclip" "c&p from cl" on)
	options+=("xcape" "remapping escape/super" on)
	options+=("arandr" "change monitor arragement" on)
	options+=("brightnessctl" "control screen brightness" on)
	options+=("pulseaudio-alsa" "audio system" on)
	options+=("pulsemixer" "audio controller" on)
	options+=("pamixer" "cl audio interface" on)
	options+=("alsa-utils" "bluetooth" on)
	options+=("pulseaudio-bluetooth" "bluetooth" on)
	options+=("bluez" "bluetooth" on)
	options+=("bluez-utils" "bluetooth" on)
	options+=("noto-fonts-cjk" "asian fonts" on)
	options+=("ttf-font-awesome" "emojis" on)
	options+=("ttf-joypixels" "emojis" on)
	options+=("dunst" "notification system" on)
	options+=("libnotify" "desktop notifications" on)
	options+=("picom" "transparency" on)
	options+=("reflector" "updating pacman mirrors" on)
	options+=("ntfs-3g" "accessing ntfs-partitions" on)
	options+=("cifs-utils" "accessing smba shares" on)
	options+=("p7zip" "extracting & archiving" on)
	options+=("openssh" "ssh" on)
	options+=("rsync" "syncing" on)
	options+=("zsh" "shell" on)
	options+=("dash" "faster /bin/sh" on)
	options+=("fzf" "fuzzy finder" on)
	options+=("bc" "cl calulator" on)
	options+=("htop" "system monitor" on)
	options+=("neofetch" "display system info" on)
	options+=("mpv" "media player" on)
	options+=("sxiv" "image viewer" on)
	options+=("pcmanfm-gtk3" "gui file manager" on)
	options+=("gvfs" "allows pcmanfm to show other drives" on)
	options+=("arc-gtk-theme" "GTK theme" on)
	options+=("breeze-icons" "GTK icons theme" on)
	options+=("maim" "screenshots" on)
	options+=("mediainfo" "showing media info" on)
	options+=("youtube-dl" "downloading youtube videos" on)
	options+=("keepassxc" "password manager" on)
	options+=("nextcloud-client" "nextcloud client" on)
	options+=("gnome-keyring" "for storing application passwords" on)
	options+=("seahorse" "for editing gnome-keyrings" on)
	options+=("imwheel" "changing mouse scroll speed" on)
	options+=("zathura" "document viewer" on)
	options+=("zathura-pdf-mupdf" "allows zathura to view epub,pdf,xps" on)
	options+=("zathura-cb" "allows zathura to view comics" off)
	options+=("thunderbird" "email client" off)
	options+=("liferea" "rss reader" off)
	options+=("qbittorrent" "torrent client" off)
	options+=("networkmanager-openvpn" "configuring openvpn" off)
	options+=("network-manager-applet" "configuring openvpn" off)
	options+=("gajim" "XMPP client" off)
	options+=("code" "microsoft code" off)
	options+=("steam" "videogames client" off)
	options+=("discord" "discord client" off)
	options+=("liquidctl" "kraken cpu cooler control" off)
	options+=("mcomix" "manga reader" off)
	options+=("cups" "printers" off)
	options+=("ghostscript" "required for my printer" off)

	optionsA=()
	optionsA+=("zsh-fast-syntax-highlighting" "shell syntax highlighting" on)
	optionsA+=("dashbinsh" "adds dash to /bin/sh" on)
	optionsA+=("gotop" "system monitor" on)
	optionsA+=("lf" "cl file manager" on)
	optionsA+=("brave-bin" "internet browser" on)
	optionsA+=("vidir" "cl bulkrename utility" on)
	optionsA+=("devour" "cl application swallowing" on)
	optionsA+=("simple-mtpfs" "accessing android devices" on)
	optionsA+=("keepmenu-git" "Keepass dmenu script" on)
	optionsA+=("gajim-plugin-omemo" "gajim omemo pluging" off)
	optionsA+=("hakuneko-desktop" "manga downloader" off)
	optionsA+=("freefilesync-bin" "syncing client" off)
	optionsA+=("epson-inkjet-printer-escpr" "my printer driver" off)

	optionsG=()
	optionsG+=("dwmblocks" "status bar" on)
	optionsG+=("dmenu" "menu and command runner" on)
	optionsG+=("st" "suckless's terminal by Luke Smith" on)
	optionsG+=("dwm" "my suckless's window manager build" on)
	optionsG+=("slock" "my suckless's window locker build" on)

	sel=$(whiptail --backtitle "$apptitle" --title "Pacman Applications :" --checklist "Choose what you want" --cancel-button "Back" 0 0 0 \
	  "${options[@]}" \
	  3>&1 1>&2 2>&3)
	if [ ! "$?" = "0" ]; then
	  exit 1
	fi
	for itm in $sel; do
	  case $itm in
	    *) pkg="$pkg $(echo $itm | sed 's/"//g')";;
	  esac
	done

	selA=$(whiptail --backtitle "$apptitle" --title "AUR Applications :" --checklist "Choose what you want" --cancel-button "Back" 0 0 0 \
	  "${optionsA[@]}" \
	  3>&1 1>&2 2>&3)
	if [ ! "$?" = "0" ]; then
	  exit 1
	fi
	for itm in $selA; do
	  case $itm in
	    *) pkgA="$pkgA $(echo $itm | sed 's/"//g')";;
	  esac
	done

	selG=$(whiptail --backtitle "$apptitle" --title "Git Applications :" --checklist "Choose what you want" --cancel-button "Back" 0 0 0 \
	  "${optionsG[@]}" \
	  3>&1 1>&2 2>&3)
	if [ ! "$?" = "0" ]; then
	  exit 1
	fi
	for itm in $selG; do
	  case $itm in
	    *) pkgG="$pkgG $(echo $itm | sed 's/"//g')";;
	  esac
	done

	sudo pacman --noconfirm --needed -S $pkg
	yay -S --noconfirm $pkgA
	for item in $pkgG; do
		git clone git://git.holdenthomas.xyz/$item ~/.local/src/$item && ~/.local/src/$item && sudo make clean install && cd
	done

	for itm in $sel; do
	  case $itm in
	    '"zsh"') chsh -s /usr/bin/zsh && mkdir -p ~/.cache/zsh;;
	    '"bluez"') sudo systemctl enable bluetooth;;
	    '"cups"') sudo systemctl enable cups;;
	  esac
	done

	yes | yay -S libxft-bgra-git
}

sudo pacman --noconfirm --needed -Sy dialog
dialog --stdout --title "Welcome" --msgbox "Welcome to HARIS Holden's arch installscript!" 0 0
clear

i=$(dialog --stdout --menu "Choose one" 0 0 0 1 "Install base arch system" 2 "Rice your arch system") || exit 1
clear
[ $i -eq 1 ] && baseArch || rice
